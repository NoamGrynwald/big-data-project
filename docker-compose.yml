services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper
    ports: ["2181:2181"]
    environment:
      ZOOKEEPER_CLIENT_PORT: "2181"
      ZOOKEEPER_TICK_TIME: "2000"
    networks: [fraud-detection]
    restart: unless-stopped

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka
    depends_on: [zookeeper]
    ports: ["9092:9092"]
    environment:
      KAFKA_BROKER_ID: "1"
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092"
      KAFKA_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: "1"
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: "1"
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: "0"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    networks: [fraud-detection]
    restart: unless-stopped

  # Real-time fraud detector using exact same versions as model training
  realtime-fraud-detector:
    build:
      context: .
      dockerfile: docker/Dockerfile.consumer
    container_name: realtime-fraud-detector
    depends_on: [kafka]
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092
    volumes:
      - ./scripts:/app/scripts
      - ./models:/app/models
    command: ["python", "scripts/fraud_detection_spark.py"]
    networks: [fraud-detection]
    restart: unless-stopped

  producer:
    build:
      context: .
      dockerfile: docker/Dockerfile.producer
    container_name: json-producer
    depends_on: [kafka]
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      KAFKA_TOPIC: creditcard-data
    volumes:
      - ./data:/app/data
      - ./scripts:/app/scripts
    command: ["bash", "/app/scripts/wait-for-kafka-and-spark.sh"]
    networks: [fraud-detection]
    restart: no

  fraud-consumer:
    build:
      context: .
      dockerfile: docker/Dockerfile.consumer
    container_name: fraud-consumer
    depends_on: [kafka]
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      KAFKA_TOPIC: fraud-alerts
      KAFKA_GROUP_ID: fraud-consumer-group
    volumes:
      - ./scripts:/app/scripts
    command: ["python", "scripts/consumer.py"]
    networks: [fraud-detection]
    restart: unless-stopped

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.8.0
    container_name: elasticsearch
    ports: ["9200:9200", "9300:9300"]
    environment:
      discovery.type: single-node
      xpack.security.enabled: "false"
      ES_JAVA_OPTS: -Xms512m -Xmx512m
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks: [fraud-detection]
    restart: unless-stopped

  kibana:
    image: docker.elastic.co/kibana/kibana:8.8.0
    container_name: kibana
    depends_on: [elasticsearch]
    ports: ["5601:5601"]
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    networks: [fraud-detection]
    restart: unless-stopped

volumes:
  zookeeper-data:
  zookeeper-logs:
  kafka-data:
  elasticsearch_data:

networks:
  fraud-detection:
    driver: bridge
